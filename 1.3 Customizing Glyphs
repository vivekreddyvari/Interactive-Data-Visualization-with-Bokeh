1.3 Chapter 

#Customizing Glyphs

when user makes the selection or hover over the glyph

# tools 

plot = figure(tools='box_select, lasso_select')

# box_select : provides a drawing rectangular regions around the box
# lasso_select : allows by drawing a free form curve

# example of flower

# plot.circle(petal_length, sepal_length, selection_color='red', nonselection_fill_alpha=0.2
				, nonselection_fill_color='grey')

# Hover appearance (is a passive inspector)

# step 1 : Import HoverTool
from bokeh.models import HoverTool
hover = HoverTool(tooltips = None, mode = 'hline')

# hline : whenever the a horizontal line from the mouse position intersects a glyph

# crosshair (for annotation over the plot)

plot = figure(tools=[hover, 'crosshair'])
plot.circle(x,y, size=15, hover_color = 'red')

# Color Mapping
for different types of data, to distinguish the color

# CategoricalColorMapper

from bokeh.models import CategoricalColorMapper
mapper = CategoricalColorMapper(
			factors = ['setora','virginica','versicolor'],
			palette = ['red','green','blue'])

plot = figure(x_axis_label = 'petal_length', y_axis_label = 'sepal_length')
plot.circle('petal_length', 'sepal_length', size = 10, source = source, 
				color = {'field':'species', 'transform':mapper})

# color is passed as dictionary which has key of field as species which inturn have transform as mapper


